{"version":3,"file":"static/js/contacts.106cf01c.chunk.js","mappings":"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","sources":["webpack://my-contacts-book/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://my-contacts-book/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://my-contacts-book/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContactItem.js","webpack://my-contacts-book/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://my-contacts-book/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://my-contacts-book/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.js","webpack://my-contacts-book/./src/pages/page.module.css?f580","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"item\":\"ContactForm_item__zE+8S\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\",\"error\":\"ContactForm_error__C1smZ\"};","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({\n  name = 'Name',\n  phone = 'Number',\n  email = 'Email',\n  changeData,\n  onSubmit,\n}) {\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '', email: '' }}\n      validationSchema={Yup.object(\n        changeData\n          ? {\n              name: Yup.string().matches(\n                /(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/,\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              ),\n              phone: Yup.string().matches(\n                /(\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})/,\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n              ),\n              email: Yup.string().email('Please provide valid e-mail'),\n            }\n          : {\n              name: Yup.string()\n                .matches(\n                  /(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/,\n                  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                )\n                .required('Required'),\n              phone: Yup.string()\n                .matches(\n                  /(\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})/,\n                  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n                )\n                .required('Required'),\n              email: Yup.string().email('Please provide valid e-mail'),\n            }\n      )}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        onSubmit(values);\n        setSubmitting(false);\n        resetForm({});\n      }}\n    >\n      <Form className={s.form}>\n        <label htmlFor=\"name\" className={s.label}>\n          {name}\n        </label>\n        <Field name=\"name\" type=\"text\" className={s.input} />\n        <ErrorMessage\n          name=\"name\"\n          render={msg => <div className={s.error}>{msg}</div>}\n        />\n\n        <label htmlFor=\"phone\" className={s.label}>\n          {phone}\n        </label>\n        <Field name=\"phone\" type=\"tel\" className={s.input} />\n        <ErrorMessage\n          name=\"phone\"\n          render={msg => <div className={s.error}>{msg}</div>}\n        />\n        <label htmlFor=\"email\" className={s.label}>\n          {email}\n        </label>\n        <Field name=\"email\" type=\"email\" className={s.input} />\n        <ErrorMessage\n          name=\"email\"\n          render={msg => <div className={s.error}>{msg}</div>}\n        />\n\n        <button type=\"submit\" className={s.button}>\n          {changeData ? 'Change details' : 'Add contact'}\n        </button>\n      </Form>\n    </Formik>\n  );\n}\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  changeData: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__aUSMv\",\"email\":\"ContactItem_email__zenYm\",\"number\":\"ContactItem_number__2mm0v\",\"name\":\"ContactItem_name__+rhVe\",\"button\":\"ContactItem_button__3O59k\",\"isFavorite\":\"ContactItem_isFavorite__DnxME\",\"contactWrap\":\"ContactItem_contactWrap__0zsjP\",\"buttonWrap\":\"ContactItem_buttonWrap__mQm49\",\"innerButtonWrap\":\"ContactItem_innerButtonWrap__KYY4v\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  AiOutlineClose,\n  AiFillSetting,\n  AiFillStar,\n  AiOutlineStar,\n} from 'react-icons/ai';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport s from './ContactItem.module.css';\nimport {\n  useDeleteContactMutation,\n  usePatchContactMutation,\n  useGetContactsQuery,\n  useSetFavoriteContactMutation,\n} from 'redux/contactsAPI';\nimport Popover from '@mui/material/Popover';\nimport Tooltip from '@mui/material/Tooltip';\nimport ContactForm from 'components/ContactForm';\nimport { toast } from 'react-toastify';\n\nexport default function ContactItem({ name, phone, id, email, favorite }) {\n  const [deletContact, { isLoading }] = useDeleteContactMutation();\n  const [changeContact] = usePatchContactMutation();\n  const [setFavoriteContact] = useSetFavoriteContactMutation();\n  const { data } = useGetContactsQuery();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const setFavorite = () => {\n    setFavoriteContact({ favorite: !favorite, contactId: id });\n  };\n\n  const onContactChange = contact => {\n    if (data.some(({ name }) => name === contact.name)) {\n      toast.error(`${contact.name} is already in contacts`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return;\n    }\n    if (!contact.name && !contact.phone && !contact.email) {\n      handleClose();\n      return;\n    }\n    !contact.name && (contact.name = name);\n    !contact.phone && (contact.phone = phone);\n    !contact.email && (contact.email = email);\n    changeContact({ contact, contactId: id });\n    handleClose();\n  };\n\n  const open = Boolean(anchorEl);\n  const idPopover = open ? 'simple-popover' : undefined;\n\n  return (\n    <>\n      <div className={s.buttonWrap}>\n        <Tooltip title=\"Add to favorite\">\n          <button onClick={setFavorite} type=\"button\" className={s.button}>\n            {favorite ? (\n              <AiFillStar className={s.isFavorite} />\n            ) : (\n              <AiOutlineStar className={s.isFavorite} />\n            )}\n          </button>\n        </Tooltip>\n        <div className={s.innerButtonWrap}>\n          <Tooltip title=\"Change details\">\n            <button onClick={handleClick} type=\"button\" className={s.button}>\n              <AiFillSetting />\n            </button>\n          </Tooltip>\n          <Tooltip title=\"Delete contact\">\n            <button\n              onClick={() => deletContact(id)}\n              type=\"button\"\n              className={s.button}\n            >\n              {isLoading ? (\n                <ClipLoader size=\"16px\" color=\"white\" />\n              ) : (\n                <AiOutlineClose />\n              )}\n            </button>\n          </Tooltip>\n        </div>\n      </div>\n      <ul className={s.contactWrap}>\n        <li className={s.contactItem}>\n          Phone:\n          <a href={`tel:${phone}`} className={s.number}>\n            {phone}\n          </a>\n        </li>\n        <li className={s.contactItem}>\n          Email:\n          <a href={`mailto:${email}`} className={s.email}>\n            {email}\n          </a>\n        </li>\n      </ul>\n\n      <Popover\n        id={idPopover}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n      >\n        <ContactForm\n          name={name}\n          phone={phone}\n          email={email}\n          changeData\n          onSubmit={onContactChange}\n        />\n      </Popover>\n    </>\n  );\n}\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  favorite: PropTypes.bool.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"accordion\":\"ContactList_accordion__kz4dM\",\"itemListTitle\":\"ContactList_itemListTitle__eKh6H\",\"item\":\"ContactList_item__EZYHO\"};","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport { IoIosArrowDown } from 'react-icons/io';\n\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts }) {\n  return (\n    <ul className={s.list}>\n      {contacts &&\n        [...contacts]\n          .sort(\n            ({ favorite: favoriteA }, { favorite: favoriteB }) =>\n              Number(favoriteB) - Number(favoriteA)\n          )\n          .map(({ name, phone, _id, email, favorite }) => (\n            <li key={_id} className={s.item}>\n              <Accordion className={s.accordion}>\n                <AccordionSummary\n                  aria-controls={name}\n                  id={_id}\n                  expandIcon={<IoIosArrowDown />}\n                  className={s.itemListTitle}\n                >\n                  {name}\n                </AccordionSummary>\n                <AccordionDetails>\n                  <ContactItem\n                    name={name}\n                    phone={phone}\n                    id={_id}\n                    email={email}\n                    favorite={favorite}\n                  />\n                </AccordionDetails>\n              </Accordion>\n            </li>\n          ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ changeFilter }) {\n  return (\n    <div className={s.filter}>\n      <label htmlFor=\"filter\" className={s.title}>\n        Find contacts\n      </label>\n      <input\n        className={s.input}\n        id=\"filter\"\n        onChange={e => changeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Notification_message__iUHOw\"};","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsPageWrap\":\"page_contactsPageWrap__IQXbX\"};","import { useState, useMemo } from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contactsAPI';\nimport { toast } from 'react-toastify';\nimport Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Notification from 'components/Notification';\nimport s from './page.module.css';\n\nexport default function ContactsPage() {\n  const [filter, setFilter] = useState('');\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const formSubmit = contact => {\n    if (data.some(({ name }) => name === contact.name)) {\n      toast.error(`${contact.name} is already in contacts`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return;\n    }\n    addContact(contact);\n  };\n\n  const filteredContacts = useMemo(() => {\n    if (!data) {\n      return;\n    }\n    const normilizedFilter = filter.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter)\n    );\n  }, [data, filter]);\n\n  return (\n    <div className={s.contactsPageWrap}>\n      <Container>\n        <h2>Contactsbook menu</h2>\n        <ContactForm onSubmit={formSubmit} />\n        <Filter changeFilter={setFilter} />\n      </Container>\n      <Container style={{ position: 'relative' }}>\n        <h2>Contacts</h2>\n        {filteredContacts?.length > 0 && (\n          <ContactList contacts={filteredContacts} />\n        )}\n        {filteredContacts?.length === 0 && (\n          <Notification message={'No contacts found'} />\n        )}\n      </Container>\n    </div>\n  );\n}\n"],"names":["Container","children","className","s","ContactForm","name","phone","email","changeData","onSubmit","initialValues","validationSchema","Yup","matches","required","values","setSubmitting","resetForm","htmlFor","type","render","msg","ContactItem","id","favorite","useDeleteContactMutation","deletContact","isLoading","usePatchContactMutation","changeContact","useSetFavoriteContactMutation","setFavoriteContact","data","useGetContactsQuery","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","idPopover","undefined","Tooltip","title","onClick","contactId","event","currentTarget","size","color","href","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","contact","some","toast","position","ContactList","contacts","sort","favoriteA","favoriteB","Number","map","_id","Accordion","AccordionSummary","expandIcon","AccordionDetails","Filter","changeFilter","onChange","e","target","value","Notification","message","ContactsPage","filter","setFilter","useAddContactMutation","addContact","filteredContacts","useMemo","normilizedFilter","toLowerCase","includes","style","length"],"sourceRoot":""}